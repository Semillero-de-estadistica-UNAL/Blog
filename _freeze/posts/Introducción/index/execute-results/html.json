{
  "hash": "81db4dd2284ac409d8c0edd7ce8ea3cf",
  "result": {
    "markdown": "---\ntitle: \"Primera Sesión\"\nauthor: \"Julian C\"\nformat:\n  html:\n    toc: true\n    toc-location: left\n    code-fold: true\n    code-tools: true\n    bibliography: ref.bib\ndate: \"2023-11-16\"\ncategories: [news, code, analysis]\nimage: \"imagen.jpg\"\n---\n\n::: {.cell}\n\n:::\n\n\nBienvenido a esta sesión introductoria sobre R, un lenguaje de programación estadística. En esta sesión, abordaremos desde la instalación de R y RStudio hasta la manipulación de variables, estructuras como vectores y matrices, y la implementación de condicionales en R.\n\n# Instalación\n\n## Instalación de R\n\nPara comenzar, necesitas instalar R en tu sistema. Puedes hacerlo siguiendo estos pasos:\n\n1.  Visita la página de descargas de R: [Descargas de R](https://cran.r-project.org/).\n\n2.  Selecciona un espejo cercano y haz clic en el enlace para tu sistema operativo (por ejemplo, Windows, macOS, o Linux).\n\n3.  Sigue las instrucciones de instalación proporcionadas en la página.\n\n## Instalación de RStudio\n\nUna vez que hayas instalado R, puedes instalar RStudio, un entorno de desarrollo integrado (IDE) para R. Sigue estos pasos:\n\n1.  Visita la página de descargas de RStudio: [Descargas de RStudio](https://www.rstudio.com/products/rstudio/download/).\n\n2.  Selecciona la versión gratuita de RStudio Desktop según tu sistema operativo.\n\n3.  Descarga el instalador y sigue las instrucciones para instalar RStudio en tu máquina.\n\n# Verificación de la instalación\n\nDespués de completar la instalación, puedes verificar si R y RStudio están instalados correctamente. Abre RStudio y ejecuta el siguiente código en la consola de R:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nR.version$version.string\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"R version 4.3.1 (2023-06-16 ucrt)\"\n```\n:::\n:::\n\n\n# Tipos de Variables\n\nEn estadística es útil clasificar los tipos de datos por la forma y propiedades que manejan, en este sentido existen las siguientes clases de datos o variables con las que se trabaja.\n\n-   Variables Numéricas\n\n    -   Variable continua : Se mide\n\n    -   Variable discretas : Se cuenta\n\n-   Variables Categóricas\n\n    -   Variable Nominal : Se clasifica\n\n        -   Variable Dummy\n\n    -   Variable Ordinal : Se jerarquiza\n\n-   Varaibles tipo Caracter : Sirve para identificar\n\n\n```{mermaid}\nflowchart TD\n    A(Variables) --> B(Numéricas)\n    A(Variables) --> C(Categóricas)\n    A(Variables) --> D(Caracter)\n    B --> E(Discretas)\n    B --> F(Continuas)\n    C --> G(Nominales)\n    C --> H(Ordinales)\n    E --> I[/Cuentan\\]\n    F --> J[/Miden\\]\n    G --> K[/Clasifican\\]\n    H --> L[/Jerarquizan\\]\n    D ---> N[/Identifican\\]\n```\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1)\ndatos <- data.frame(id = sample(10000:99999, 10, replace = FALSE),\n                    sexo = sample(c(\"Hombre\",\"Mujer\",NA),10,replace = T),\n                    estatura = round(runif(10,150,190),1),\n                    estrato = sample(1:6,10, replace = T),\n                    edad = sample(20:40, 10,replace = T),\n                    fuma = sample(0:1,10, replace = T))\n                    \nkbl(datos)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> id </th>\n   <th style=\"text-align:left;\"> sexo </th>\n   <th style=\"text-align:right;\"> estatura </th>\n   <th style=\"text-align:right;\"> estrato </th>\n   <th style=\"text-align:right;\"> edad </th>\n   <th style=\"text-align:right;\"> fuma </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 34387 </td>\n   <td style=\"text-align:left;\"> Mujer </td>\n   <td style=\"text-align:right;\"> 178.9 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 33 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 69520 </td>\n   <td style=\"text-align:left;\"> Hombre </td>\n   <td style=\"text-align:right;\"> 166.5 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 21 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 53306 </td>\n   <td style=\"text-align:left;\"> Hombre </td>\n   <td style=\"text-align:right;\"> 182.8 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 32 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 79585 </td>\n   <td style=\"text-align:left;\"> Mujer </td>\n   <td style=\"text-align:right;\"> 175.9 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 37 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 21570 </td>\n   <td style=\"text-align:left;\"> Mujer </td>\n   <td style=\"text-align:right;\"> 181.3 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 33 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 35172 </td>\n   <td style=\"text-align:left;\"> Mujer </td>\n   <td style=\"text-align:right;\"> 172.1 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 25 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 42617 </td>\n   <td style=\"text-align:left;\"> Hombre </td>\n   <td style=\"text-align:right;\"> 171.2 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 20 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 23902 </td>\n   <td style=\"text-align:left;\"> NA </td>\n   <td style=\"text-align:right;\"> 181.6 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 38 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 18228 </td>\n   <td style=\"text-align:left;\"> Hombre </td>\n   <td style=\"text-align:right;\"> 150.9 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 38 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 35304 </td>\n   <td style=\"text-align:left;\"> NA </td>\n   <td style=\"text-align:right;\"> 169.1 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 27 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n**¿Cómo se ven estas Variables en R?**\n\nEn R para ver cual es el tipo de clase de un objeto se usa la función `class()`. En las variables mencionadas la nomenclatura en R es la siguiente\n\n-   Variable Numérica discreta `int`\n-   Variable Numérica continua `numeric`\n-   Variable Categórica nominal `factor`\n-   Variable Categórica ordinal `factor` con niveles organizados\n-   Variable Caracter `Character`\n\nLa función `str()` nos permite ver la estructura de las variables de un data frame\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(datos)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t10 obs. of  6 variables:\n $ id      : int  34387 69520 53306 79585 21570 35172 42617 23902 18228 35304\n $ sexo    : chr  \"Mujer\" \"Hombre\" \"Hombre\" \"Mujer\" ...\n $ estatura: num  179 166 183 176 181 ...\n $ estrato : int  1 6 1 4 1 6 2 3 2 6\n $ edad    : int  33 21 32 37 33 25 20 38 38 27\n $ fuma    : int  1 0 0 1 1 1 0 0 0 1\n```\n:::\n:::\n\n\nLa forma en que se muestran los datos en la tabla es aparentemente adecuada, sin embargo, vemos que la clase de las variables no corresponden a la lógica de los datos.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatos$id <- as.character(datos$id)\ndatos$sexo <- factor(datos$sexo)\ndatos$estrato <- factor(datos$estrato, levels=c(1,2,3,4,5,6),\n                        labels = c(\"est1\",\"est2\",\"est3\",\"est4\",\"est5\",\"est6\"))\ndatos$fuma <- factor(datos$fuma)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nkbl(datos)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> id </th>\n   <th style=\"text-align:left;\"> sexo </th>\n   <th style=\"text-align:right;\"> estatura </th>\n   <th style=\"text-align:left;\"> estrato </th>\n   <th style=\"text-align:right;\"> edad </th>\n   <th style=\"text-align:left;\"> fuma </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> 34387 </td>\n   <td style=\"text-align:left;\"> Mujer </td>\n   <td style=\"text-align:right;\"> 178.9 </td>\n   <td style=\"text-align:left;\"> est1 </td>\n   <td style=\"text-align:right;\"> 33 </td>\n   <td style=\"text-align:left;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 69520 </td>\n   <td style=\"text-align:left;\"> Hombre </td>\n   <td style=\"text-align:right;\"> 166.5 </td>\n   <td style=\"text-align:left;\"> est6 </td>\n   <td style=\"text-align:right;\"> 21 </td>\n   <td style=\"text-align:left;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 53306 </td>\n   <td style=\"text-align:left;\"> Hombre </td>\n   <td style=\"text-align:right;\"> 182.8 </td>\n   <td style=\"text-align:left;\"> est1 </td>\n   <td style=\"text-align:right;\"> 32 </td>\n   <td style=\"text-align:left;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 79585 </td>\n   <td style=\"text-align:left;\"> Mujer </td>\n   <td style=\"text-align:right;\"> 175.9 </td>\n   <td style=\"text-align:left;\"> est4 </td>\n   <td style=\"text-align:right;\"> 37 </td>\n   <td style=\"text-align:left;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 21570 </td>\n   <td style=\"text-align:left;\"> Mujer </td>\n   <td style=\"text-align:right;\"> 181.3 </td>\n   <td style=\"text-align:left;\"> est1 </td>\n   <td style=\"text-align:right;\"> 33 </td>\n   <td style=\"text-align:left;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 35172 </td>\n   <td style=\"text-align:left;\"> Mujer </td>\n   <td style=\"text-align:right;\"> 172.1 </td>\n   <td style=\"text-align:left;\"> est6 </td>\n   <td style=\"text-align:right;\"> 25 </td>\n   <td style=\"text-align:left;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 42617 </td>\n   <td style=\"text-align:left;\"> Hombre </td>\n   <td style=\"text-align:right;\"> 171.2 </td>\n   <td style=\"text-align:left;\"> est2 </td>\n   <td style=\"text-align:right;\"> 20 </td>\n   <td style=\"text-align:left;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 23902 </td>\n   <td style=\"text-align:left;\"> NA </td>\n   <td style=\"text-align:right;\"> 181.6 </td>\n   <td style=\"text-align:left;\"> est3 </td>\n   <td style=\"text-align:right;\"> 38 </td>\n   <td style=\"text-align:left;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 18228 </td>\n   <td style=\"text-align:left;\"> Hombre </td>\n   <td style=\"text-align:right;\"> 150.9 </td>\n   <td style=\"text-align:left;\"> est2 </td>\n   <td style=\"text-align:right;\"> 38 </td>\n   <td style=\"text-align:left;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 35304 </td>\n   <td style=\"text-align:left;\"> NA </td>\n   <td style=\"text-align:right;\"> 169.1 </td>\n   <td style=\"text-align:left;\"> est6 </td>\n   <td style=\"text-align:right;\"> 27 </td>\n   <td style=\"text-align:left;\"> 1 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n\n```{.r .cell-code}\nstr(datos)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t10 obs. of  6 variables:\n $ id      : chr  \"34387\" \"69520\" \"53306\" \"79585\" ...\n $ sexo    : Factor w/ 2 levels \"Hombre\",\"Mujer\": 2 1 1 2 2 2 1 NA 1 NA\n $ estatura: num  179 166 183 176 181 ...\n $ estrato : Factor w/ 6 levels \"est1\",\"est2\",..: 1 6 1 4 1 6 2 3 2 6\n $ edad    : int  33 21 32 37 33 25 20 38 38 27\n $ fuma    : Factor w/ 2 levels \"0\",\"1\": 2 1 1 2 2 2 1 1 1 2\n```\n:::\n:::\n\n\n# Estructura de datos y arreglos\n\n## Vectores\n\nUn vector es una estructura de datos unidimensional que puede contener elementos del mismo tipo, como números, caracteres o lógicos.\n\nPuedes crear vectores utilizando la función `c()` (concatenate) o funciones específicas como `numeric()`, `character()`, `logical()`, etc.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Ejemplo de vector numérico\nvector_numerico <- c(1, 2, 3, 4, 5)\n# Ejemplo de vector de caracteres\nvector_caracteres <- c(\"a\", \"b\", \"c\")\n# Ejemplo de vector lógico\nvector_logico <- c(TRUE, TRUE, TRUE)\n\n# Jerarquia de los vectores \nchar_num <- c(1, 2, \"a\")\nnum_bol <- c(FALSE, 7, TRUE)\nchar_bol <- c(FALSE, TRUE, \"a\")\nall <- c(FALSE, 3, \"a\")\ncat( char_num,\"\\n\" ,num_bol,\"\\n\", char_bol,\"\\n\", all)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n1 2 a \n 0 7 1 \n FALSE TRUE a \n FALSE 3 a\n```\n:::\n:::\n\n\n## Matrices\n\nUna matriz es una estructura bidimensional que contiene elementos del mismo tipo.\n\nSe puede crear utilizando la función `matrix().`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Crear una matriz\nmatriz <- matrix(c(1, 2, 3, 4, 5, 6), nrow = 2, ncol = 3)\nmatriz\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n```\n:::\n:::\n\n\n## Array\n\nUn array es una generalización de una matriz que puede tener más de dos dimensiones. Se crea con la función **`array()`**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmatriz1 <- matrix(1:4, nrow = 2)\nmatriz2 <- matrix(5:8, nrow = 2)\n\n# Crear un array que contenga las dos matrices anteriores\nmatriz_de_matrices <- array(c(matriz1, matriz2), dim = c(2, 2, 2))\n\n# Imprimir el array de matrices\nprint(matriz_de_matrices)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n, , 1\n\n     [,1] [,2]\n[1,]    1    3\n[2,]    2    4\n\n, , 2\n\n     [,1] [,2]\n[1,]    5    7\n[2,]    6    8\n```\n:::\n:::\n\n\n## Data frame\n\nUn data frame es similar a una matriz, pero puede contener columnas de diferentes tipos. Es una estructura de datos muy utilizada en análisis de datos.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_df <- data.frame(\n  nombre = c(\"Juan\", \"María\", \"Carlos\"),\n  edad = c(25, 30, 22),\n  soltero = c(TRUE, FALSE, TRUE)\n)\ndata_df\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  nombre edad soltero\n1   Juan   25    TRUE\n2  María   30   FALSE\n3 Carlos   22    TRUE\n```\n:::\n:::\n\n\n## Lista\n\nUna lista es una estructura de datos que puede contener elementos de diferentes tipos. Cada elemento de la lista puede ser accedido mediante su índice o su nombre.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Crear una lista\nmi_lista <- list(nombre = \"Juan\", edad = 25, soltero = TRUE,\n                 df = data_df, array = matriz_de_matrices)\n\nmi_lista \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$nombre\n[1] \"Juan\"\n\n$edad\n[1] 25\n\n$soltero\n[1] TRUE\n\n$df\n  nombre edad soltero\n1   Juan   25    TRUE\n2  María   30   FALSE\n3 Carlos   22    TRUE\n\n$array\n, , 1\n\n     [,1] [,2]\n[1,]    1    3\n[2,]    2    4\n\n, , 2\n\n     [,1] [,2]\n[1,]    5    7\n[2,]    6    8\n```\n:::\n:::\n\n\n# Condicionales\n\nEn R, los condicionales son estructuras que permiten ejecutar bloques de código dependiendo de si una condición es verdadera o falsa. Los condicionales más comunes son `if`, `else if` y `else`.\n\nPara evaluar la ocurrencia de una condición se debe hacer uso de los operadores lógicos.\n\n## Operadores logicos\n\n| Operador       | Descripción                        | Ejemplo                          | Resultado (Ejemplo) |\n|----------------|-------------------------|----------------|----------------|\n| `==`           | Igual a                            | `2 == 2`                         | `TRUE`              |\n| `!=`           | No igual a                         | `3 != 5`                         | `TRUE`              |\n| `<`            | Menor que                          | `4 < 7`                          | `TRUE`              |\n| `<=`           | Menor o igual que                  | `6 <= 6`                         | `TRUE`              |\n| `>`            | Mayor que                          | `9 > 3`                          | `TRUE`              |\n| `>=`           | Mayor o igual que                  | `5 >= 5`                         | `TRUE`              |\n| `!`            | Negación (not)                     | `!TRUE`                          | `FALSE`             |\n| `&`            | AND lógico (elemento por elemento) | `c(TRUE, FALSE) & c(TRUE, TRUE)` | `c(TRUE, FALSE)`    |\n| `&&`           | AND lógico (escalar)               | `TRUE && FALSE`                  | `FALSE`             |\n| `|`            | OR lógico (elemento por elemento)  | `c(TRUE, FALSE) | c(TRUE, TRUE)` | `c(TRUE, TRUE)`     |\n| `||`           | OR lógico (escalar)                | `TRUE || FALSE`                  | `TRUE`              |\n| `%in%`         | Pertenencia a un conjunto          | `3 %in% c(1, 2, 3, 4)`           | `TRUE`              |\n| `is.numeric`   | Verificar si es numérico           | `is.numeric(42)`                 | `TRUE`              |\n| `is.character` | Verificar si es caracter           | `is.character(\"Hola\")`           | `TRUE`              |\n| `is.logical`   | Verificar si es lógico             | `is.logical(TRUE)`               | `TRUE`              |\n\n## Condicional `if`\n\nSupongamos que tenemos una variable `edad` y queremos imprimir un mensaje dependiendo de si la persona es mayor de edad.\n\n::: {.cell}\n\n```{.r .cell-code}\nedad <- c(20)\nif (edad >= 18) {\n  mensaje <- \"La persona es mayor de edad.\"\n} else {\n  mensaje <- \"La persona es menor de edad.\"\n}\nmensaje\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"La persona es mayor de edad.\"\n```\n:::\n:::\n\n\n## Condicional `else`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nedad <- 25\n\nif (edad < 18) {\n  mensaje <- \"La persona es menor de edad.\"\n} else if (edad >= 18 & edad < 65) {\n  mensaje <- \"La persona es adulta.\"\n} else {\n  mensaje <- \"La persona es adulta mayor.\"\n}\n\nprint(mensaje)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"La persona es adulta.\"\n```\n:::\n:::\n\n## Función `ifelse()`\n\nLa función `ifelse()` nos permite vectorizar la operación de condicionales en un formato funcional. \n\nCon `if` solo se podía evaluar una única condición, con la función `ifelse()` se pueden evaluar múltiples condiciones a la vez.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1)\nedades <- rpois(15,18)\nresultado = ifelse(edades < 18,\n                   \"Es menor de edad\",\n                   \"Es mayor de edad\")\nedades\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] 15 23 23 19 11 20 21 20 16 24 19 15 16 16 19\n```\n:::\n\n```{.r .cell-code}\nresultado\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Es menor de edad\" \"Es mayor de edad\" \"Es mayor de edad\" \"Es mayor de edad\"\n [5] \"Es menor de edad\" \"Es mayor de edad\" \"Es mayor de edad\" \"Es mayor de edad\"\n [9] \"Es menor de edad\" \"Es mayor de edad\" \"Es mayor de edad\" \"Es menor de edad\"\n[13] \"Es menor de edad\" \"Es menor de edad\" \"Es mayor de edad\"\n```\n:::\n:::\n\n\n# Referencias \n\n* R para principiantes Juan Bosco Mendoza Vega [bookdown](https://bookdown.org/jboscomendoza/r-principiantes4/).\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\r\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}